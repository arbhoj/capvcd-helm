apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  labels:
    konvoy.d2iq.io/cluster-name: {{ .Values.cluster.name }}
  name: kube-vip-cc-installation-{{ .Values.cluster.name }}
  namespace: {{ .Release.Namespace }}
spec:
  clusterSelector:
    matchLabels:
      konvoy.d2iq.io/cluster-name: {{ .Values.cluster.name }}
  resources:
  - kind: ConfigMap
    name: kube-vip-cc-config-{{ .Values.cluster.name }}
  strategy: ApplyAlways
---
apiVersion: v1
data:
  custom-resources.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: kube-vip-cloud-controller
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
      name: system:kube-vip-cloud-controller-role
    rules:
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "create", "update", "list", "put"]
      - apiGroups: [""]
        resources: ["configmaps", "endpoints","events","services/status", "leases"]
        verbs: ["*"]
      - apiGroups: [""]
        resources: ["nodes", "services"]
        verbs: ["list","get","watch","update"]
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: system:kube-vip-cloud-controller-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:kube-vip-cloud-controller-role
    subjects:
    - kind: ServiceAccount
      name: kube-vip-cloud-controller
      namespace: kube-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kube-vip-cloud-provider
      namespace: kube-system
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: kube-vip
          component: kube-vip-cloud-provider
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: kube-vip
            component: kube-vip-cloud-provider
        spec:
          containers:
          - command:
            - /kube-vip-cloud-provider
            - --leader-elect-resource-name=kube-vip-cloud-controller
            image: ghcr.io/kube-vip/kube-vip-cloud-provider:v0.0.4
            name: kube-vip-cloud-provider
            imagePullPolicy: Always
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          serviceAccountName: kube-vip-cloud-controller
          tolerations:
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
          - key: node-role.kubernetes.io/control-plane
            effect: NoSchedule
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 10
                preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - weight: 10
                preference:
                  matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
    ---
    apiVersion: v1
    data:
      range-global: {{ .Values.cluster.k8s_svc_vip_range }}
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      name: kubevip
      namespace: kube-system
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: kube-vip-cc-config-{{ .Values.cluster.name }}
